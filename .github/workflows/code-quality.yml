name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend-quality:
    name: Backend Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整的git历史，用于SonarCloud分析

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Run tests and generate coverage
      working-directory: ./www/backend
      run: |
        mvn clean verify

    - name: Run SonarCloud analysis
      working-directory: ./www/backend
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ "${{ secrets.SONAR_TOKEN }}" != "" ]; then
          mvn sonar:sonar \
            -Dsonar.projectKey=ecowiki-backend \
            -Dsonar.organization=your-org \
            -Dsonar.host.url=https://sonarcloud.io
        else
          echo "SonarCloud analysis skipped: SONAR_TOKEN not configured"
        fi

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./www/backend/target/site/jacoco/jacoco.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8

    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      working-directory: ./www/frontend
      run: pnpm install

    - name: Run ESLint
      working-directory: ./www/frontend
      run: |
        # 如果项目中有ESLint配置，运行ESLint
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ] || [ -f "eslint.config.js" ]; then
          npx eslint src/ --ext .ts,.vue --format json --output-file eslint-results.json || true
        else
          echo "ESLint configuration not found, skipping..."
        fi

    - name: Run Prettier check
      working-directory: ./www/frontend
      run: |
        pnpm exec prettier --check src/ || true

    - name: Type check
      working-directory: ./www/frontend
      run: pnpm run type-check

    - name: Run SonarCloud analysis for Frontend
      uses: SonarSource/sonarcloud-github-action@master
      if: env.SONAR_TOKEN != ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: ./www/frontend
        args: >
          -Dsonar.projectKey=ecowiki-frontend
          -Dsonar.organization=your-org
          -Dsonar.sources=src
          -Dsonar.exclusions=**/*.test.ts,**/*.spec.ts

  dependency-security:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities (Backend)
      uses: snyk/actions/maven@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=www/backend/pom.xml

    - name: Set up Node.js for frontend security scan
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Run Snyk to check for vulnerabilities (Frontend)
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=www/frontend/package.json

  code-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java', 'javascript' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
