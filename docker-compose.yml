version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: ecowiki-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: ecowiki
      MYSQL_USER: ecowiki
      MYSQL_PASSWORD: ecowiki123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - ecowiki-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis (可选，用于缓存和会话存储)
  redis:
    image: redis:7-alpine
    container_name: ecowiki-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecowiki-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # 后端服务
  backend:
    build:
      context: ./www/backend
      dockerfile: Dockerfile
    container_name: ecowiki-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/ecowiki
      SPRING_DATASOURCE_USERNAME: ecowiki
      SPRING_DATASOURCE_PASSWORD: ecowiki123
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ecowiki-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端服务
  frontend:
    build:
      context: ./www/frontend
      dockerfile: Dockerfile
    container_name: ecowiki-frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - ecowiki-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Nginx 反向代理 (生产环境)
  nginx:
    image: nginx:alpine
    container_name: ecowiki-nginx
    ports:
      - "443:443"
      - "8443:8443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - ecowiki-network
    profiles:
      - production

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ecowiki-network:
    driver: bridge
